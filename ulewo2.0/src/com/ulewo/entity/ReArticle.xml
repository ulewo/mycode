<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="reArticle">
	<cacheModel id="user-cache" type="LRU" readOnly="true"
		serialize="false">
		<flushInterval hours="24" />
		<property value="500" name="size" />
	</cacheModel>
	
	<typeAlias alias="reArticle" type="com.ulewo.entity.ReArticle" />
	
	<!-- 新增回复-->
	<insert id="addReArticle" parameterClass="reArticle">
		insert into rearticle (articleid,pid,gid,content,authorid,authorname,retime,atuserid,atusername,sourcefrom)
		values(#articleId#,#pid#,#gid#,#content#,#authorid#,#authorName#,#reTime#,#atUserId#,#atUserName#,#sourceFrom#);
		<selectKey resultClass="int" keyProperty="id">  
   	 		select max(id) from rearticle  
  	 	</selectKey>  
	</insert>
	
	<!-- 删除回复 -->
	<delete id="deleteReArticle" parameterClass="java.lang.Integer">
		delete from rearticle where id = #id#
	</delete>
	
	<!-- 通过id单笔查询回复 -->
	<select id="getReArticle"  resultClass="reArticle" parameterClass="java.lang.Integer">
		select r.id,r.articleid,r.gid,r.content,r.authorid,
		(case when r.authorid is not null then u.username else r.authorname end)as authorName,
		(case when r.authorid is not null then u.userLittleIcon else '' end)as authorIcon,
		r.retime
		from rearticle r left join user u on u.userid = r.authorid where id = #id#
	</select>
	
	<!-- 更新回复 -->
	<update id="updateReArticle" parameterClass="reArticle">
		update rearticle set content = #content# where id=#id#
	</update>
	
	<!-- 查询回复总条数 -->
	
	<select id="queryReArticleCount" resultClass="java.lang.Integer" parameterClass="java.lang.Integer">
		select count(id) from rearticle where articleid = #articleid#
	</select>	
	
	<!--通过articleId查询回复-->
	<select id="queryReArticles" resultClass="reArticle" parameterClass="java.util.Map">
		select r.id,r.pid,r.articleid,r.gid,r.content,r.authorid,r.sourcefrom,
		(case when r.authorid is not null then u.username else r.authorname end)as authorName,
		(case when r.authorid is not null then u.userLittleIcon else '' end)as authorIcon,
		r.retime,atuserid,
		(case when r.atuserid is not null then (select username from user us where us.userid=r.atuserid) else r.atusername end)as atUserName,
		(case when r.atuserid is not null then  (select us.userLittleIcon from user us where us.userid=r.atuserid)  else '' end)as atUserIcon
		from rearticle r left join user u on u.userid = r.authorid where articleid = #articleid#
	</select>	
	
	<!-- 根据PID查询回复 -->
	<select id="queryReArticleByPid" resultClass="reArticle" parameterClass="java.lang.Integer">
		select * from rearticle where pid = #pid#
	</select>	
	
	<!--查询最后的回复-->
	<select id="queryLatestReArticle" resultClass="reArticle" parameterClass="java.lang.Integer">
		select r.retime,r.articleid,r.authorid,
		(case when r.authorid is not null then u.username else r.authorname end)as authorname
		from rearticle r left join user u on u.userid = r.authorid where r.articleid = #articleid# 
		order by r.retime desc limit 0,1 
	</select>
	
	<select id="queryAllReArticleByGid" resultClass="reArticle" parameterClass="java.util.Map">
	    select r.id,r.pid,r.articleid,r.gid,r.content,r.authorid,r.sourcefrom,u.username as authorname,
	    u.userLittleIcon as authorIcon,a.title as articleTitle
		from rearticle r inner join user u on u.userid = r.authorid inner join article a on a.id=r.articleid 
		where r.gid = #gid# order by retime desc limit #offset#,#total#
	</select>
	
	<select id="queryAllReArticleCountByGid" resultClass="java.lang.Integer" parameterClass="java.lang.String">
		select count(*) from rearticle where gid = #gid#
	</select>	
	
	<!-- 查询所有回复 -->
	<select id="queryAllReArticle" resultClass="reArticle" parameterClass="java.util.Map">
	    select r.id,r.pid,r.articleid,r.gid,r.content,r.authorid,r.sourcefrom,u.username as authorname,retime,
	    u.userLittleIcon as authorIcon
		from rearticle r inner join user u on u.userid = r.authorid
		order by retime desc limit #offset#,#total#
	</select>
	
	<select id="queryAllReArticleCount" resultClass="java.lang.Integer" parameterClass="java.lang.String">
		select count(*) from rearticle
	</select>	
	
	<!--根据userId查询回复的数量-->
	<select id="queryReArticleCountByUserId"  resultClass="java.lang.Integer" parameterClass="java.util.Map">
		select count(id) from rearticle where authorid = #userId#
		<isEqual prepend="or" property="includeme" compareValue="0">
         	authorid in (select friendid from user_friend where userid = #userId#)
		</isEqual>
	</select>
	
	<select id="queryReArticleByUserId" resultClass="reArticle" parameterClass="java.util.Map">
	    select r.id,r.articleid,r.content,r.authorid as authorId,r.sourcefrom,u.username as authorname,
	    u.userLittleIcon as authorIcon,a.title as articleTitle,r.atuserid,r.atusername,a.gid as gid,r.retime
		from rearticle r inner join user u on u.userid = r.authorid inner join article a on a.id=r.articleid 
		where r.authorid = #userId#
		<isEqual prepend="or" property="includeme" compareValue="0">
         	r.authorid in (select friendid from user_friend where userid = #userId#)
		</isEqual>
		order by retime desc limit #offset#,#total#
	</select>
	
</sqlMap>
