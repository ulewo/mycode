<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="blogArticle">
	<cacheModel id="user-cache" type="LRU" readOnly="true"
		serialize="false">
		<flushInterval hours="24" />
		<property value="500" name="size" />
	</cacheModel>
	<typeAlias alias="blogArticle" type="com.ulewo.entity.BlogArticle" />
	
	<!-- 添加文章-->
	<insert id="addBlogArticle" parameterClass="blogArticle">
		<selectKey keyProperty="id" resultClass="java.lang.Integer" type="post">
      		SELECT LAST_INSERT_ID()
    	 </selectKey>
        <![CDATA[
        insert into blog_article (userid,itemid,title,summary,content,posttime,keyword,allowreplay,image,allimage)
		values(#userId#,#itemId#,#title#,#summary#,#content#,#postTime#,#keyWord#,#allowReplay#,#image#,#allImage#)
        ]]>
	</insert>
	
	<!--删除文章-->
	<delete id="delete"> 
       delete from blog_article where id=#id#
	</delete> 
	
	<!--删除文章-->
	<delete id="deleteArticle"> 
       delete from blog_article where id=#id#
	</delete> 
	
	<!-- 单笔查询文章-->
	<select id="queryTopicById"  resultClass="blogArticle" parameterClass="java.lang.Integer">
		select *,i.itemname itemName,u.username as userName,(select count(r.id) from blog_reply r where r.blogid=b.id) as reCount from blog_article b left outer join blog_item i on b.itemid = i.id inner join user u
		on u.userid = b.userid where b.id = #id#
	</select>
	
	<!--通过用户查询文章-->
	<select id="queryBlog"  resultClass="blogArticle" parameterClass="java.util.Map">
		select *,(select count(r.id) from blog_reply r where r.blogid=b.id) as reCount,i.itemname as itemName from blog_article b 
		left outer join blog_item i on i.id=b.itemid
		<dynamic prepend="where">
			<isNotEqual prepend="and" compareValue="0"  property="itemId">
         	  <![CDATA[itemid = #itemId# ]]>
			</isNotEqual>
			<isNotEmpty prepend="and" property="userId">
         	  <![CDATA[b.userid = #userId# ]]>
			</isNotEmpty>
		</dynamic>
		order by
		<isEqual property="orderType" compareValue="time">
		     posttime desc
		</isEqual>
		<isEqual property="orderType" compareValue="readcount">
		     readCount desc
		</isEqual>
		limit #offset#,#total#
	</select>
	
	<!--通过用户查询文章-->
	<select id="queryBlogCount"  resultClass="java.lang.Integer" parameterClass="java.util.Map">
		select count(id) from blog_article 
		<dynamic prepend="where">
			<isNotEqual prepend="and" compareValue="0"  property="itemId">
         	  <![CDATA[itemid = #itemId# ]]>
			</isNotEqual>
			<isNotEmpty prepend="and" property="userId">
         	  <![CDATA[userid = #userId# ]]>
			</isNotEmpty>		    
		</dynamic>
	</select>
	
	<!-- 更新不为空的字段 主要是后台操作更新默写状态 -->
	<update id="updateArticle_selective" parameterClass="blogArticle">
		update blog_article
		set id=#id#
		<isNotEmpty prepend="," property="itemId">
			itemid=#itemId# 
    	</isNotEmpty>
    	<isNotEmpty prepend="," property="title">
           title=#title# 
        </isNotEmpty>
        <isNotEmpty prepend="," property="summary">
          summary=#summary#
        </isNotEmpty>
        <isNotEmpty prepend="," property="content">
          content=#content#
        </isNotEmpty>
        <isNotEmpty prepend="," property="readCount">
			readcount=#readCount#
        </isNotEmpty>
        <isNotEmpty prepend="," property="keyWord">
			keyword=#keyWord#
        </isNotEmpty>
        <isNotEmpty prepend="," property="allowReplay">
			allowreplay=#allowReplay#
        </isNotEmpty>
		where id=#id#
	</update>
	
	<!-- 更新阅读数 -->
	<update id="updatReadCount" parameterClass="blogArticle">
		update blog_article set readcount = #readCount# where id=#id#
	</update>
	
	<select id="indexLatestBlog" resultClass="blogArticle" parameterClass="java.util.Map">
		select id,title,posttime,readCount,summary,b.userid,(select count(r.id) from blog_reply r where r.blogid=b.id) as reCount,
		u.username as userName,u.userlittleicon as userIcon
		from blog_article b left outer join user u on b.userid=u.userid order by posttime desc limit  #offset#,#total#
	</select>
	
	<select id="querCount" resultClass="java.lang.Integer">
		select count(id) from blog_article
	</select>
	
	<!-- 搜索博客 -->
	<select id="searchBlog"  resultClass="blogArticle" parameterClass="java.util.Map">
		select id,title,posttime,readCount,summary,b.userid,(select count(r.id) from blog_reply r where r.blogid=b.id) as reCount,
		u.username as userName,u.userlittleicon as userIcon
		from blog_article b left outer join user u on b.userid=u.userid
		<dynamic prepend="where"> 
		<isNotEmpty prepend="and" property="keyWord">
         	  <![CDATA[(b.content like '%$keyWord$%' or b.title like '%$keyWord$%') ]]>
		</isNotEmpty>
		</dynamic>
		order by posttime desc limit  #offset#,#total#
	</select>
	
	<!-- 搜索博客数量 -->
	<select id="searchBlogCount"  resultClass="java.lang.Integer" parameterClass="java.util.Map">
		select count(id) from blog_article
		<dynamic prepend="where"> 
		<isNotEmpty prepend="and" property="keyWord">
         	  <![CDATA[(content like '%$keyWord$%' or title like '%$keyWord$%') ]]>
		</isNotEmpty>
		</dynamic>
	</select>
</sqlMap>
