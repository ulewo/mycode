<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="talk">
	<cacheModel id="user-cache" type="LRU" readOnly="true"
		serialize="false">
		<flushInterval hours="24" />
		<property value="500" name="size" />
	</cacheModel>
	
	
	<typeAlias alias="talk" type="com.ulewo.entity.Talk" />
	
	<!-- 添加留言 -->
	<insert id="addtalk" parameterClass="talk">
		<selectKey keyProperty="id" resultClass="java.lang.Integer" type="post">
      		SELECT LAST_INSERT_ID()
    	 </selectKey>
        <![CDATA[
           insert into talk(userid,username,usericon,imgurl,content,createtime,sourcefrom) 
		values(#userId#,#userName#,#userIcon#,#imgurl#,#content#,#createTime#,#sourceFrom#)
        ]]>
	</insert>
	
	<!-- 查询留言 -->
	<select id="queryLatestTalk"  resultClass="talk" parameterClass="java.util.Map">
	    select t.*,(select count(r.id) from retalk r where r.talkid=t.id) recount from talk t order by createtime desc limit #offset#,#total#
	</select>
	
	<!-- 查询留言总条数 -->
	<select id="queryCount"  resultClass="java.lang.Integer">
	    select count(id) from talk;
	</select>
	
	<!-- 查询详情 -->
	<select id="queryDetail"  resultClass="talk">
	  select t.*,(select count(r.id) from retalk r where r.talkid=t.id) recount from talk t where id = #talkId#
	</select>
	
	<!-- 根据userId查询 总条数-->
	<select id="queryCountByUserId"  resultClass="java.lang.Integer" parameterClass="java.util.Map">
	    select count(id) from talk where userid = #userId#
		<isEqual prepend="or" property="includeme" compareValue="0">
         	userid in (select friendid from user_friend where userid = #userId#)
		</isEqual>
	</select>
	
	<!-- 根据userId查询 说说-->
	<select id="queryTalkByUserId"  resultClass="talk">
	    select t.*,(select count(r.id) from retalk r where r.talkid=t.id) recount from talk t where userid = #userId#
		<isEqual prepend="or" property="includeme" compareValue="0">
         	userid in (select friendid from user_friend where userid = #userId#)
		</isEqual>
	    order by createtime desc limit #offset#,#total#
	</select>
	
	<delete id="deleteTalk" parameterClass="java.lang.Integer">
		delete from talk where id=#id#
	</delete>
</sqlMap>
