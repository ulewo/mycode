<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ulewo.mapper.PrivateLetterMapper" >
  <resultMap id="BaseResultMap" type="com.ulewo.model.PrivateLetter" >
    <id column="letter_id" property="letterId" jdbcType="INTEGER" />
    <result column="send_userid" property="sendUserid" jdbcType="INTEGER" />
    <result column="receive_userid" property="receiveUserid" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ulewo.model.PrivateLetter" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    letter_id, send_userid, receive_userid, create_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ulewo_private_letter
    where letter_id = #{letterId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ulewo_private_letter
    where letter_id = #{letterId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ulewo.model.PrivateLetter" >
    insert into ulewo_private_letter (letter_id, send_userid, receive_userid, 
      create_time, content)
    values (#{letterId,jdbcType=INTEGER}, #{sendUserid,jdbcType=INTEGER}, #{receiveUserid,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ulewo.model.PrivateLetter" >
    update ulewo_private_letter
    <set >
      <if test="sendUserid != null" >
        send_userid = #{sendUserid,jdbcType=INTEGER},
      </if>
      <if test="receiveUserid != null" >
        receive_userid = #{receiveUserid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where letter_id = #{letterId,jdbcType=INTEGER}
  </update>
</mapper>